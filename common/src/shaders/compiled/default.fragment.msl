#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_UniformBlock
{
    float4x4 Matrix;
};

struct VsOutput
{
    float2 TexCoord;
    float4 Color;
    float4 Position;
    float4 mult_wash_fill_pad;
};

constant float4 _37 = {};

struct fragment_main_out
{
    float4 out_var_SV_Target0 [[color(0)]];
};

struct fragment_main_in
{
    float2 in_var_TEXCOORD0 [[user(locn0)]];
    float4 in_var_TEXCOORD1 [[user(locn1)]];
    float4 in_var_TEXCOORD3 [[user(locn2)]];
};

fragment fragment_main_out fragment_main(fragment_main_in in [[stage_in]], texture2d<float> Texture [[texture(0)]], sampler Sampler [[sampler(0)]], float4 gl_FragCoord [[position]])
{
    fragment_main_out out = {};
    float2 _42 = in.in_var_TEXCOORD0;
    float4 _41 = in.in_var_TEXCOORD1;
    float4 _40 = in.in_var_TEXCOORD3;
    float4 _43 = Texture.sample(Sampler, in.in_var_TEXCOORD0);
    float4 _44 = in.in_var_TEXCOORD1;
    float _45 = in.in_var_TEXCOORD3.x;
    float _46 = in.in_var_TEXCOORD3.y;
    float _47 = in.in_var_TEXCOORD3.z;
    float4 _74 = (((_43 * in.in_var_TEXCOORD3.x) * in.in_var_TEXCOORD1) + (in.in_var_TEXCOORD1 * (in.in_var_TEXCOORD3.y * _43.w))) + (in.in_var_TEXCOORD1 * in.in_var_TEXCOORD3.z);
    float4 _48 = _74;
    float4 _49 = _74;
    out.out_var_SV_Target0 = _74;
    return out;
}

